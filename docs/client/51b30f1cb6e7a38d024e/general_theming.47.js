(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{45:function(e,t,c){"use strict";c.r(t);var o=c(0);function b(e){let t,c,b,j,r,O,a,l,n,h,s,i,m,p,d,u,f,g,v,y,T,w,E,B,C,q,S,P,k,M,Y,H,x,A,R,J,W,D,I,N,V,z,F,G="\n<style>\n  :root {\n    --info-color: green;\n  }\n</style>".trim()+"",K='\nimport { loadTheme } from "svelte-toolkit";\n\nonMount(() => {\n  loadTheme({\n    "--info-color": "pink"\n  });\n});'.trim()+"",L='\nimport { getTheme } from "svelte-toolkit";\n\nonMount(() => {\n  alert(getTheme());\n});'.trim()+"";return{c(){t=Object(o.hb)(),c=Object(o.C)("div"),b=Object(o.C)("h1"),j=Object(o.lb)("Theming"),r=Object(o.hb)(),O=Object(o.C)("p"),a=Object(o.lb)("Theming is handled using CSS custom properties. The properties that are supported are listed\r\n    "),l=Object(o.C)("a"),n=Object(o.lb)("here"),h=Object(o.lb)(". There are two main ways you can set these properties."),s=Object(o.hb)(),i=Object(o.C)("h2"),m=Object(o.lb)("Styles"),p=Object(o.hb)(),d=Object(o.C)("p"),u=Object(o.lb)("You can set custom properties in the style tag of your component:"),f=Object(o.hb)(),g=Object(o.C)("pre"),v=Object(o.lb)(G),y=Object(o.hb)(),T=Object(o.C)("p"),w=Object(o.lb)("When setting custom properties in the style tag, you need to make sure you set all related\r\n    colors (e.g. if you set --info-color, you will also need to set --info-hover-color)."),E=Object(o.hb)(),B=Object(o.C)("h2"),C=Object(o.lb)("loadTheme"),q=Object(o.hb)(),S=Object(o.C)("p"),P=Object(o.lb)("Alternatively, you can pass an object into the loadTheme method in the onMount method of your\r\n    component:"),k=Object(o.hb)(),M=Object(o.C)("pre"),Y=Object(o.lb)(K),H=Object(o.hb)(),x=Object(o.C)("p"),A=Object(o.lb)("The loadTheme method will set related colors (e.g. in the example above it will set\r\n    --info-hover-color as well as --info-color) but as it's called on onMount the original colors\r\n    will be displayed briefly before the theme colors are loaded."),R=Object(o.hb)(),J=Object(o.C)("h2"),W=Object(o.lb)("getTheme"),D=Object(o.hb)(),I=Object(o.C)("p"),N=Object(o.lb)("You can use the getTheme method to get all colors that have been set (including related\r\n    colors if set through loadTheme):"),V=Object(o.hb)(),z=Object(o.C)("pre"),F=Object(o.lb)(L),this.h()},l(e){Object(o.Y)('[data-svelte="svelte-1nauig6"]',document.head).forEach(o.B),t=Object(o.p)(e),c=Object(o.o)(e,"DIV",{class:!0});var Q=Object(o.m)(c);b=Object(o.o)(Q,"H1",{});var U=Object(o.m)(b);j=Object(o.q)(U,"Theming"),U.forEach(o.B),r=Object(o.p)(Q),O=Object(o.o)(Q,"P",{});var X=Object(o.m)(O);a=Object(o.q)(X,"Theming is handled using CSS custom properties. The properties that are supported are listed\r\n    "),l=Object(o.o)(X,"A",{href:!0});var Z=Object(o.m)(l);n=Object(o.q)(Z,"here"),Z.forEach(o.B),h=Object(o.q)(X,". There are two main ways you can set these properties."),X.forEach(o.B),s=Object(o.p)(Q),i=Object(o.o)(Q,"H2",{});var $=Object(o.m)(i);m=Object(o.q)($,"Styles"),$.forEach(o.B),p=Object(o.p)(Q),d=Object(o.o)(Q,"P",{});var _=Object(o.m)(d);u=Object(o.q)(_,"You can set custom properties in the style tag of your component:"),_.forEach(o.B),f=Object(o.p)(Q),g=Object(o.o)(Q,"PRE",{lang:!0});var ee=Object(o.m)(g);v=Object(o.q)(ee,G),ee.forEach(o.B),y=Object(o.p)(Q),T=Object(o.o)(Q,"P",{});var te=Object(o.m)(T);w=Object(o.q)(te,"When setting custom properties in the style tag, you need to make sure you set all related\r\n    colors (e.g. if you set --info-color, you will also need to set --info-hover-color)."),te.forEach(o.B),E=Object(o.p)(Q),B=Object(o.o)(Q,"H2",{});var ce=Object(o.m)(B);C=Object(o.q)(ce,"loadTheme"),ce.forEach(o.B),q=Object(o.p)(Q),S=Object(o.o)(Q,"P",{});var oe=Object(o.m)(S);P=Object(o.q)(oe,"Alternatively, you can pass an object into the loadTheme method in the onMount method of your\r\n    component:"),oe.forEach(o.B),k=Object(o.p)(Q),M=Object(o.o)(Q,"PRE",{lang:!0});var be=Object(o.m)(M);Y=Object(o.q)(be,K),be.forEach(o.B),H=Object(o.p)(Q),x=Object(o.o)(Q,"P",{});var je=Object(o.m)(x);A=Object(o.q)(je,"The loadTheme method will set related colors (e.g. in the example above it will set\r\n    --info-hover-color as well as --info-color) but as it's called on onMount the original colors\r\n    will be displayed briefly before the theme colors are loaded."),je.forEach(o.B),R=Object(o.p)(Q),J=Object(o.o)(Q,"H2",{});var re=Object(o.m)(J);W=Object(o.q)(re,"getTheme"),re.forEach(o.B),D=Object(o.p)(Q),I=Object(o.o)(Q,"P",{});var Oe=Object(o.m)(I);N=Object(o.q)(Oe,"You can use the getTheme method to get all colors that have been set (including related\r\n    colors if set through loadTheme):"),Oe.forEach(o.B),V=Object(o.p)(Q),z=Object(o.o)(Q,"PRE",{lang:!0});var ae=Object(o.m)(z);F=Object(o.q)(ae,L),ae.forEach(o.B),Q.forEach(o.B),this.h()},h(){document.title="Theming | Svelte Toolkit",Object(o.g)(l,"href","general/themeproperties"),Object(o.g)(g,"lang","javascript"),Object(o.g)(M,"lang","javascript"),Object(o.g)(z,"lang","javascript"),Object(o.g)(c,"class","container")},m(e,G){Object(o.O)(e,t,G),Object(o.O)(e,c,G),Object(o.e)(c,b),Object(o.e)(b,j),Object(o.e)(c,r),Object(o.e)(c,O),Object(o.e)(O,a),Object(o.e)(O,l),Object(o.e)(l,n),Object(o.e)(O,h),Object(o.e)(c,s),Object(o.e)(c,i),Object(o.e)(i,m),Object(o.e)(c,p),Object(o.e)(c,d),Object(o.e)(d,u),Object(o.e)(c,f),Object(o.e)(c,g),Object(o.e)(g,v),Object(o.e)(c,y),Object(o.e)(c,T),Object(o.e)(T,w),Object(o.e)(c,E),Object(o.e)(c,B),Object(o.e)(B,C),Object(o.e)(c,q),Object(o.e)(c,S),Object(o.e)(S,P),Object(o.e)(c,k),Object(o.e)(c,M),Object(o.e)(M,Y),Object(o.e)(c,H),Object(o.e)(c,x),Object(o.e)(x,A),Object(o.e)(c,R),Object(o.e)(c,J),Object(o.e)(J,W),Object(o.e)(c,D),Object(o.e)(c,I),Object(o.e)(I,N),Object(o.e)(c,V),Object(o.e)(c,z),Object(o.e)(z,F)},p:o.S,i:o.S,o:o.S,d(e){e&&Object(o.B)(t),e&&Object(o.B)(c)}}}t.default=class extends o.a{constructor(e){super(),Object(o.N)(this,e,null,b,o.ab,{})}}}}]);