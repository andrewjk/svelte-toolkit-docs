(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{45:function(e,t,c){"use strict";c.r(t);var o=c(0);function b(e){let t,c,b,j,r,O,a,n,l,s,h,i,m,p,g,u,d,f,v,y,T,w,E,B,C,q,S,P,k,M,H,Y,x,A,R,J,W,D,I,N,V,Z,z,F="\n<style>\n  :root {\n    --info-color: green;\n  }\n</style>".trim()+"",G='\nimport { loadTheme } from "svelte-toolkit";\n\nonMount(() => {\n  loadTheme({\n    "--info-color": "pink"\n  });\n});'.trim()+"",K='\nimport { getTheme } from "svelte-toolkit";\n\nonMount(() => {\n  alert(getTheme());\n});'.trim()+"";return{c(){t=Object(o.gb)(),c=Object(o.C)("div"),b=Object(o.C)("h1"),j=Object(o.jb)("Theming"),r=Object(o.gb)(),O=Object(o.C)("p"),a=Object(o.jb)("Theming is handled using CSS custom properties. The properties that are supported are listed\r\n    "),n=Object(o.C)("a"),l=Object(o.jb)("here"),s=Object(o.jb)(". There are two main ways you can set these properties."),h=Object(o.gb)(),i=Object(o.C)("h2"),m=Object(o.jb)("Styles"),p=Object(o.gb)(),g=Object(o.C)("p"),u=Object(o.jb)("You can set custom properties in the style tag of your component:"),d=Object(o.gb)(),f=Object(o.C)("pre"),v=Object(o.jb)(F),y=Object(o.gb)(),T=Object(o.C)("p"),w=Object(o.jb)("When setting custom properties in the style tag, you need to make sure you set all related\r\n    colors (e.g. if you set --info-color, you will also need to set --info-hover-color)."),E=Object(o.gb)(),B=Object(o.C)("h2"),C=Object(o.jb)("loadTheme"),q=Object(o.gb)(),S=Object(o.C)("p"),P=Object(o.jb)("Alternatively, you can pass an object into the loadTheme method in the onMount method of your\r\n    component:"),k=Object(o.gb)(),M=Object(o.C)("pre"),H=Object(o.jb)(G),Y=Object(o.gb)(),x=Object(o.C)("p"),A=Object(o.jb)("The loadTheme method will set related colors (e.g. in the example above it will set\r\n    --info-hover-color as well as --info-color) but as it's called on onMount the original colors\r\n    will be displayed briefly before the theme colors are loaded."),R=Object(o.gb)(),J=Object(o.C)("h2"),W=Object(o.jb)("getTheme"),D=Object(o.gb)(),I=Object(o.C)("p"),N=Object(o.jb)("You can use the getTheme method to get all colors that have been set (including related\r\n    colors if set through loadTheme):"),V=Object(o.gb)(),Z=Object(o.C)("pre"),z=Object(o.jb)(K),this.h()},l(e){t=Object(o.p)(e),c=Object(o.o)(e,"DIV",{class:!0});var L=Object(o.m)(c);b=Object(o.o)(L,"H1",{});var Q=Object(o.m)(b);j=Object(o.q)(Q,"Theming"),Q.forEach(o.B),r=Object(o.p)(L),O=Object(o.o)(L,"P",{});var U=Object(o.m)(O);a=Object(o.q)(U,"Theming is handled using CSS custom properties. The properties that are supported are listed\r\n    "),n=Object(o.o)(U,"A",{href:!0});var X=Object(o.m)(n);l=Object(o.q)(X,"here"),X.forEach(o.B),s=Object(o.q)(U,". There are two main ways you can set these properties."),U.forEach(o.B),h=Object(o.p)(L),i=Object(o.o)(L,"H2",{});var $=Object(o.m)(i);m=Object(o.q)($,"Styles"),$.forEach(o.B),p=Object(o.p)(L),g=Object(o.o)(L,"P",{});var _=Object(o.m)(g);u=Object(o.q)(_,"You can set custom properties in the style tag of your component:"),_.forEach(o.B),d=Object(o.p)(L),f=Object(o.o)(L,"PRE",{lang:!0});var ee=Object(o.m)(f);v=Object(o.q)(ee,F),ee.forEach(o.B),y=Object(o.p)(L),T=Object(o.o)(L,"P",{});var te=Object(o.m)(T);w=Object(o.q)(te,"When setting custom properties in the style tag, you need to make sure you set all related\r\n    colors (e.g. if you set --info-color, you will also need to set --info-hover-color)."),te.forEach(o.B),E=Object(o.p)(L),B=Object(o.o)(L,"H2",{});var ce=Object(o.m)(B);C=Object(o.q)(ce,"loadTheme"),ce.forEach(o.B),q=Object(o.p)(L),S=Object(o.o)(L,"P",{});var oe=Object(o.m)(S);P=Object(o.q)(oe,"Alternatively, you can pass an object into the loadTheme method in the onMount method of your\r\n    component:"),oe.forEach(o.B),k=Object(o.p)(L),M=Object(o.o)(L,"PRE",{lang:!0});var be=Object(o.m)(M);H=Object(o.q)(be,G),be.forEach(o.B),Y=Object(o.p)(L),x=Object(o.o)(L,"P",{});var je=Object(o.m)(x);A=Object(o.q)(je,"The loadTheme method will set related colors (e.g. in the example above it will set\r\n    --info-hover-color as well as --info-color) but as it's called on onMount the original colors\r\n    will be displayed briefly before the theme colors are loaded."),je.forEach(o.B),R=Object(o.p)(L),J=Object(o.o)(L,"H2",{});var re=Object(o.m)(J);W=Object(o.q)(re,"getTheme"),re.forEach(o.B),D=Object(o.p)(L),I=Object(o.o)(L,"P",{});var Oe=Object(o.m)(I);N=Object(o.q)(Oe,"You can use the getTheme method to get all colors that have been set (including related\r\n    colors if set through loadTheme):"),Oe.forEach(o.B),V=Object(o.p)(L),Z=Object(o.o)(L,"PRE",{lang:!0});var ae=Object(o.m)(Z);z=Object(o.q)(ae,K),ae.forEach(o.B),L.forEach(o.B),this.h()},h(){document.title="Theming | Svelte Toolkit",Object(o.g)(n,"href","general/themeproperties"),Object(o.g)(f,"lang","javascript"),Object(o.g)(M,"lang","javascript"),Object(o.g)(Z,"lang","javascript"),Object(o.g)(c,"class","container")},m(e,F){Object(o.O)(e,t,F),Object(o.O)(e,c,F),Object(o.e)(c,b),Object(o.e)(b,j),Object(o.e)(c,r),Object(o.e)(c,O),Object(o.e)(O,a),Object(o.e)(O,n),Object(o.e)(n,l),Object(o.e)(O,s),Object(o.e)(c,h),Object(o.e)(c,i),Object(o.e)(i,m),Object(o.e)(c,p),Object(o.e)(c,g),Object(o.e)(g,u),Object(o.e)(c,d),Object(o.e)(c,f),Object(o.e)(f,v),Object(o.e)(c,y),Object(o.e)(c,T),Object(o.e)(T,w),Object(o.e)(c,E),Object(o.e)(c,B),Object(o.e)(B,C),Object(o.e)(c,q),Object(o.e)(c,S),Object(o.e)(S,P),Object(o.e)(c,k),Object(o.e)(c,M),Object(o.e)(M,H),Object(o.e)(c,Y),Object(o.e)(c,x),Object(o.e)(x,A),Object(o.e)(c,R),Object(o.e)(c,J),Object(o.e)(J,W),Object(o.e)(c,D),Object(o.e)(c,I),Object(o.e)(I,N),Object(o.e)(c,V),Object(o.e)(c,Z),Object(o.e)(Z,z)},p:o.S,i:o.S,o:o.S,d(e){e&&Object(o.B)(t),e&&Object(o.B)(c)}}}t.default=class extends o.a{constructor(e){super(),Object(o.N)(this,e,null,b,o.Z,{})}}}}]);